name: Creating Nuget Package

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Nuget Version'
        required: true

env:
  BUILD_CONFIG : 'Release'
  PROJECT_PATH : 'RequestSDK/RequestSDK.csproj'
  PACKAGE_OUTPUT_DIRECTORY : ${{github.workspace}}/PackagePath
  NUGET_PACK_URL : 'https://nuget.pkg.github.com/${{ github.actor }}/index.json'
  LIGHT_GREEN: '\033[92m'
  GREEN: '\033[32m'
  RESET: '\033[0m'

jobs:
  deploy_package:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: |
          dotnet restore ${{env.PROJECT_PATH}}
          echo -e "${{env.GREEN}}  Restoring was successful ${{env.RESET}}"
    
      - name: Build
        run: |
          dotnet build ${{env.PROJECT_PATH}} --no-restore --configuration ${{env.BUILD_CONFIG}}
          echo -e "${{env.GREEN}}Building was successful ${{env.RESET}}"
      
      - name: Pack Project
        run: |
          echo -e "${{env.LIGHT_GREEN}} Packing version:${{env.RESET}} $GREEN '${{github.event.inputs.version}}' $RESET"
          dotnet pack ${{env.PROJECT_PATH}} --no-restore --no-build --configuration ${{env.BUILD_CONFIG}} -p:PackageVersion=${{github.event.inputs.version}} --output ${{env.PACKAGE_OUTPUT_DIRECTORY}}
          echo -e "${{env.GREEN}} Packing was successful ${{env.RESET}}"
      
      - name: Push Package
        run: |
          dotnet nuget push ${{env.PACKAGE_OUTPUT_DIRECTORY}}/*.nupkg --source ${{env.NUGET_PACK_URL}} --api-key ${{secrets.NUGET_PACKAGE_TOKEN}}
          echo -e "${{env.GREEN}} Package Pushing was successful ${{env.RESET}}"